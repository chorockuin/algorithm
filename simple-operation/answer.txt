file chall
chall: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=7cbc60d6b591837f08c1570ca2eee3ab3d22a3e9, for GNU/Linux 3.2.0, not stripped

    ELF 64-bit LSB pie executable
        ELF: Executable and Linkable Format의 약자로, 리눅스에서 실행 파일과 공유 라이브러리 등에 쓰이는 바이너리 포맷입니다.
        64-bit: 64비트 시스템용으로 컴파일된 파일입니다. 이는 CPU가 64비트 명령어 집합을 지원해야 실행할 수 있다는 뜻입니다.
        LSB (Little Endian): 데이터를 메모리에 저장할 때 하위 바이트부터 먼저 저장하는 형식입니다. x86 및 x86-64는 모두 Little Endian입니다.
        PIE (Position Independent Executable):
        주소 독립 실행 파일입니다. 즉, 메모리 어느 위치에 로드되어도 실행될 수 있도록 만들어졌습니다.
        PIE 파일은 보안 기능인 **ASLR (Address Space Layout Randomization)**을 사용할 수 있게 해줍니다.
        일반 실행 파일은 고정 주소에 로드되지만, PIE는 매번 다른 위치에 로드될 수 있어 익스플로잇을 어렵게 만듭니다

    x86-64
        이 실행 파일은 x86-64 (AMD64) 아키텍처용입니다. 즉, 64비트 Intel 또는 AMD CPU에서 동작합니다.
        i386이나 i686은 32비트 아키텍처를 의미합니다. x86-64는 64비트 확장판입니다.

    version 1 (SYSV)
        ELF 포맷의 ABI(Application Binary Interface) 버전입니다.
        SYSV는 System V ABI를 따른다는 뜻으로, 대부분의 리눅스 시스템은 이 표준을 따릅니다.
        특별한 목적이 아닌 이상, 대부분 ELF 실행 파일은 이 ABI를 사용합니다.

    dynamically linked
        실행 파일이 정적 링크가 아닌 동적 링크로 컴파일되었음을 의미합니다.
        즉, 이 파일은 실행 시점에 외부 공유 라이브러리 (.so 파일들)를 불러와서 사용합니다.
        대표적으로 libc.so.6, libm.so.6, ld-linux.so.2 등 리눅스 시스템 라이브러리들이 여기에 포함됩니다.
        정적 링크된 실행 파일은 모든 라이브러리를 내부에 포함하고 있어서 외부 의존성이 적지만, 크기가 큽니다.

    interpreter /lib64/ld-linux-x86-64.so.2
        동적 로딩을 담당하는 인터프리터(런타임 링커)의 경로입니다.
        이 파일은 실행 시 공유 라이브러리를 메모리에 로드하고, 실제 실행을 시작하기 위한 준비를 합니다.
        ld-linux-x86-64.so.2는 일반적으로 glibc에 포함된 프로그램입니다.
        PIE든 아니든 동적 링크된 ELF 파일은 이 인터프리터를 통해 실행됩니다.

    BuildID[sha1]=7cbc60d6b591837f08c1570ca2eee3ab3d22a3e9
        Build ID는 빌드 시 생성된 고유한 식별자로, 디버깅이나 크래시 리포트 분석에 사용됩니다.
        sha1 해시 기반으로 생성됩니다.
        GDB나 debuginfod와 같은 도구에서 빌드 ID를 이용해 디버깅 심볼(.debug 파일)을 자동으로 찾아줄 수 있습니다.
        리눅스 배포판에서는 /usr/lib/debug/.build-id/ 경로에서 BuildID 기반 디버깅 파일을 찾습니다.

    for GNU/Linux 3.2.0
        이 실행 파일이 최소한 리눅스 커널 3.2.0 버전 이상에서 실행되도록 빌드되었음을 의미합니다.
        커널의 uname -r이 이보다 낮다면 실행되지 않을 수도 있습니다.
        일반적으로 glibc 버전이 사용하는 커널 기능에 따라 이 값이 정해집니다.

    not stripped
        디버깅 심볼(함수 이름, 변수 이름, 라인 정보 등)이 제거되지 않았다는 의미입니다.
        stripped는 디버깅 정보를 제거해서 파일 크기를 줄이고 보안을 높입니다.
        not stripped인 파일은 리버싱할 때 함수 이름, 디버깅 정보 등을 활용할 수 있어서 분석이 훨씬 수월합니다.
        strip 명령어를 사용하면 stripped 상태로 만들 수 있습니다.

sudo apt install gdb binutils ltrace strace
